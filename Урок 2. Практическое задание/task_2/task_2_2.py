"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""
print("Данная программа запрашивает у пользователя целое число и выводит количество четных и нечетных цифр в данном числе.")

def recur_decision(number, even=0, odd=0):
    if number == 0:
        return even, odd
    else:
        last_digit = number % 10
        number = number // 10
        if last_digit % 2 == 0:
            even += 1
            return recur_decision(number, even, odd)
        else:
            odd += 1
            return recur_decision(number, even, odd)

try:
    number = int(input("Введите целое число (побольше): "))
    print(f'Количество четных и нечетных цифр в числе: {recur_decision(number)}, соответственно.')
except ValueError:
    print("Необходимо ввести целое число. Попробуйте ещё раз.")
